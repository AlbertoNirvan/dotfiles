// ==UserScript==
// @name              CJK text Optimization
// @name:zh-CN        ‰∏≠Êó•Èü©ÊñáÂ≠ó‰ºòÂåñ
// @namespace         https://github.com/epoweripione/dotfiles
// @version           1.0.0
// @description       Set font-family by html.lang; add spaces between CJK characters and Latin letters
// @description:zh-cn Ê†πÊçÆÁΩëÈ°µ html.lang ËÆæÁΩÆÈªòËÆ§Â≠ó‰ΩìÔºõËá™Âä®Âú®Ê±âÂ≠ó‰∏éÊãâ‰∏ÅÂ≠óÊØçÈó¥Ê∑ªÂä†Á©∫Ê†ºÁ≠â
// @author            epoweripione
// @license           MIT
// @match             http://*/*
// @match             https://*/*
// @require           https://cdn.bootcss.com/jquery/3.6.0/jquery.min.js
// @require           https://cdn.bootcdn.net/ajax/libs/findAndReplaceDOMText/0.4.6/findAndReplaceDOMText.min.js
// @require           https://cdn.jsdelivr.net/npm/chinese-characters-codepoints-converter/index.js
// @grant             none
// ==/UserScript==

// [Console Importer](https://chrome.google.com/webstore/detail/console-importer/hgajpakhafplebkdljleajgbpdmplhie)
// $i('https://cdn.bootcss.com/jquery/3.6.0/jquery.min.js');
// $i('https://cdn.bootcdn.net/ajax/libs/findAndReplaceDOMText/0.4.6/findAndReplaceDOMText.min.js');
// $i('https://cdn.jsdelivr.net/npm/chinese-characters-codepoints-converter/index.js');

// Unicode Code Points
// '¬©'.codePointAt(0).toString(16);
// 'üòç'.codePointAt(0).toString(16);
// String.fromCodePoint(128525); // 'üòç'
// String.fromCodePoint(0x1f60d); // 'üòç'

(function() {
    'use strict';

    const siteHost = location.host;

    const FONT_DEFAULT = 'Noto Sans'; // ÈªòËÆ§Â≠ó‰Ωì
    const FONT_EMOJI = 'emoji'; // Emoji Â≠ó‰Ωì
    const FONT_FALLBACK = 'sans-serif'; // Â§áÁî®Â≠ó‰Ωì
    const FONT_MONO = 'FiraCode Nerd Font Mono'; // Á≠âÂÆΩÂ≠ó‰Ωì

    const FONT_CJK_SC = 'Noto Sans CJK SC'; // ÁÆÄ‰Ωì‰∏≠ÊñáÂ≠ó‰Ωì
    const FONT_MONO_CJK_SC = 'Noto Sans Mono CJK SC'; // ÁÆÄ‰Ωì‰∏≠ÊñáÁ≠âÂÆΩÂ≠ó‰Ωì

    const FONT_CJK_TC = 'Noto Sans CJK TC'; // ÁπÅ‰Ωì‰∏≠ÊñáÔºàÂè∞ÊπæÔºâÂ≠ó‰Ωì
    const FONT_MONO_CJK_TC = 'Noto Sans Mono CJK TC'; // ÁπÅ‰Ωì‰∏≠ÊñáÔºàÂè∞ÊπæÔºâÁ≠âÂÆΩÂ≠ó‰Ωì

    const FONT_CJK_HK = 'Noto Sans CJK HK'; // ÁπÅ‰Ωì‰∏≠ÊñáÔºàÊ∏ØÊæ≥ÔºâÂ≠ó‰Ωì
    const FONT_MONO_CJK_HK = 'Noto Sans Mono CJK HK'; // ÁπÅ‰Ωì‰∏≠ÊñáÔºàÊ∏ØÊæ≥ÔºâÁ≠âÂÆΩÂ≠ó‰Ωì

    const FONT_CJK_JP = 'Noto Sans CJK JP'; // Êó•ÊñáÂ≠ó‰Ωì
    const FONT_MONO_CJK_JP = 'Noto Sans Mono CJK JP'; // Êó•ÊñáÁ≠âÂÆΩÂ≠ó‰Ωì

    const FONT_CJK_KR = 'Noto Sans CJK KR'; // Èü©ÊñáÂ≠ó‰Ωì
    const FONT_MONO_CJK_KR = 'Noto Sans Mono CJK KR'; // Èü©ÊñáÁ≠âÂÆΩÂ≠ó‰Ωì

    // Âú∞Âå∫„ÄÅCJK Â≠ó‰Ωì„ÄÅCJK Á≠âÂÆΩÂ≠ó‰Ωì
    let FONT_LOCALE,FONT_CJK,FONT_MONO_CJK;

    // https://stackoverflow.com/questions/23683439/gm-addstyle-equivalent-in-tampermonkey
    function GM_addStyle(css) {
        const style = document.getElementById("CJK_Text_Optimize_TamperMonkey") || (function() {
            const style = document.createElement('style');
            style.type = 'text/css';
            style.id = "FontStyle_TamperMonkey";
            document.head.appendChild(style);
            return style;
        })();
        const sheet = style.sheet;
        sheet.insertRule(css, (sheet.rules || sheet.cssRules || []).length);
    }

    function GM_addStyleInnerHTML(css) {
        const style = document.createElement('style');
        style.type = 'text/css';
        style.id = "CJK_Text_Optimize_TamperMonkey";
        style.innerHTML = css;
        document.head.appendChild(style);
    }

    // let selectors = [
    //     'body',
    //     '.markdown-body',
    //     '.tooltipped::after',
    //     '.default-label .sha .ellipses'
    // ];
    // let styleNode = document.createElement('style');
    // let styleText = document.createTextNode(selectors.join(', ') + ' { font-family: ' + fontfamily + ' !important; }');
    // styleNode.type = "text/css";
    // styleNode.appendChild(styleText);
    // document.head.appendChild(styleNode);

    const FONTS_REPLACE = [
        'Noto Sans CJK SC',
        'Noto Sans CJK TC',
        'Noto Sans CJK HK',
        'Noto Sans CJK JP',
        'Noto Sans CJK KR',
        'Noto Serif CJK SC',
        'Noto Serif CJK TC',
        'Noto Serif CJK HK',
        'Noto Serif CJK JP',
        'Noto Serif CJK KR',
        'Noto Sans SC',
        'Noto Sans TC',
        'Noto Sans HK',
        'Noto Sans JP',
        'Noto Sans KR',
        'Noto Serif SC',
        'Noto Serif TC',
        'Noto Serif HK',
        'Noto Serif JP',
        'Noto Serif KR',
        'PingFang',
        'PingFangSC',
        'PingFangTC',
        'PingFangHK',
        'PingFang SC',
        'PingFang TC',
        'PingFang HK',
        'PingFang-SC',
        'PingFang-TC',
        'PingFang-HK',
        'Arial',
        'Arial Black',
        'Calibri',
        'Candara',
        'Comic Sans MS',
        'Corbel',
        'Helvetica',
        'Helvetica Neue',
        'Impact',
        'Lato',
        'Lucida Grande',
        'Roboto',
        'Segoe UI',
        'Tahoma',
        'Tahoma Bold',
        'Trebuchet MS',
        'Verdana',
        'sans-serif',
        '-apple-system',
        '-webkit-standard',
        'BlinkMacSystemFont',
        'Open Sans',
        'standard',
        'Source Sans 3',
        'Cambria',
        'Georgia',
        'Constantia',
        'Mceinline',
        'Palatino Linotype',
        'Times CY',
        'Times New Roman',
        'Times',
        'serif',
        'Source Serif 4',
        'FZLanTingHei-R-GBK',
        'Heiti SC',
        'Hiragino Sans GB',
        'Microsoft YaHei',
        'Microsoft YaHei UI',
        'STHeiti',
        'Simhei',
        'Source Han Sans CN',
        'WenQuanYi Micro Hei',
        'WenQuanYi Zen Hei',
        'ÂæÆËΩØÈõÖÈªë',
        'ÁÄπÂ¨©Á∂ã',
        'Èªë‰Ωì',
        'ÂçéÊñáÈªë‰Ωì',
        'ÔøΩÔøΩÔøΩÔøΩ',
        'Apple LiGothic',
        'Apple LiGothic Medium',
        'Heiti TC',
        'ÈªëÈ´î-ÁπÅ',
        'Microsoft Jhenghei',
        'Microsoft JhengHei UI',
        'Custom-MS-JhengHei',
        'ÂæÆËªüÊ≠£ÈªëÈ´î',
        'Hiragino Sans',
        'Meiryo',
        'Meiryo UI',
        'MS PGothic',
        'Ôº≠Ôº≥ Ôº∞„Ç¥„Ç∑„ÉÉ„ÇØ',
        'Yu Gothic',
        'Yu Gothic Medium',
        'Yu Gothic UI',
        'Ê∏∏„Ç¥„Ç∑„ÉÉ„ÇØ',
        'Ê∏∏„Ç¥„Ç∑„ÉÉ„ÇØ Medium',
        'Ê∏∏„Ç¥„Ç∑„ÉÉ„ÇØ‰Ωì',
        '„É°„Ç§„É™„Ç™',
        '„Éí„É©„ÇÆ„ÉéËßí„Ç¥ Pro W3',
        'Gulim',
        'Íµ¥Î¶º',
        'dotum',
        'ÎèãÏõÄ',
        'Í≥†Îîï',
        'Arial SimSun',
        'simsun Arial',
        'Simsun',
        'ÂÆã‰Ωì',
        'ÂÆãÈ´î',
        'PMingLiU',
        'PMingLiU-ExtB',
        'Êñ∞ÁªÜÊòé‰Ωì',
        'Êñ∞Á¥∞ÊòéÈ´î',
        'Yu Mincho',
        'Myungjo',
        'Î™ÖÏ°∞',
        'Batang',
        'Î∞îÌÉï',
        'Andale Mono',
        'Consolas',
        'Courier',
        'Courier New',
        'FantasqueSansMonoRegular',
        'Lucida Console',
        'Menlo',
        'Monaco',
        'mono',
        'monospace',
        'NSimsun',
        'Êñ∞ÂÆã‰Ωì',
        'ÁªÜÊòé‰Ωì',
        'MingLiU',
        'MingLiU-ExtB',
        'Êñ∞ÂÆãÈ´î',
        'Á¥∞ÊòéÈ´î',
        'MingLiU_HKSCS',
        'MingLiU_HKSCS-ExtB',
    ];

    // CJK Unicode Characters
    // [Unicode Â≠óÁ¨¶Âπ≥Èù¢Êò†Â∞Ñ](https://zh.wikipedia.org/wiki/Unicode%E5%AD%97%E7%AC%A6%E5%B9%B3%E9%9D%A2%E6%98%A0%E5%B0%84)
    // [Unicode Character Database](https://www.unicode.org/Public/UCD/latest/)
    // [Unicode Character Ranges](http://jrgraphix.net/r/Unicode/)
    // [What every JavaScript developer should know about Unicode](https://dmitripavlutin.com/what-every-javascript-developer-should-know-about-unicode/)
    // ÊâÄÊúâ CJK Â≠óÁ¨¶
    const UNICODE_CJK_ALL = [
        '\\u1100-\\u11FF', // Hangul Jamo
        // '\\u2600-\\u26FF', // Miscellaneous Symbols
        // '\\u2700-\\u27BF', // Dingbats
        // '\\u2800-\\u28FF', // Braille Patterns
        '\\u2E80-\\u2EFF', // CJK Radicals Supplement
        '\\u2F00-\\u2FDF', // Kangxi Radicals
        '\\u2FF0-\\u2FFF', // Ideographic Description Characters
        '\\u3000-\\u303F', // CJK Symbols and Punctuation
        '\\u3040-\\u309F', // Hiragana
        '\\u30A0-\\u30FF', // Katakana
        '\\u3100-\\u312F', // Bopomofo
        '\\u3130-\\u318F', // Hangul Compatibility Jamo
        '\\u3190-\\u319F', // Kanbun
        '\\u31A0-\\u31BF', // Bopomofo Extended
        '\\u31F0-\\u31FF', // Katakana Phonetic Extensions
        '\\u3200-\\u32FF', // Enclosed CJK Letters and Months
        '\\u3300-\\u33FF', // CJK Compatibility
        '\\u3400-\\u4DBF', // CJK Unified Ideographs Extension A
        '\\u4DC0-\\u4DFF', // Yijing Hexagram Symbols
        '\\u4E00-\\u9FFF', // CJK Unified Ideographs
        '\\uA000-\\uA48F', // Yi Syllables
        '\\uA490-\\uA4CF', // Yi Radicals
        '\\uAC00-\\uD7AF', // Hangul Syllables
        // '\\uD800-\\uDB7F', // High Surrogates
        // '\\uDB80-\\uDBFF', // High Private Use Surrogates
        // '\\uDC00-\\uDFFF', // Low Surrogates
        // '\\uE000-\\uF8FF', // Private Use Area
        '\\uF900-\\uFAFF', // CJK Compatibility Ideograph
        // '\\uFB00-\\uFB4F', // Alphabetic Presentation Forms
        // '\\uFB50-\\uFDFF', // Arabic Presentation Forms-A
        // '\\uFE00-\\uFE0F', // Variation Selectors
        // '\\uFE20-\\uFE2F', // Combining Half Marks
        '\\uFE30-\\uFE4F', // CJK Compatibility Forms
        // '\\uFE50-\\uFE6F', // Small Form Variants
        // '\\uFE70-\\uFEFF', // Arabic Presentation Forms-B
        '\\uFF00-\\uFFEF', // Halfwidth and Fullwidth Forms
        // '\\uFFF0-\\uFFFF', // Specials
        // '\\u{10000}-\\u{1007F}', // Linear B Syllabary
        // '\\u{10080}-\\u{100FF}', // Linear B Ideograms
        // '\\u{10100}-\\u{1013F}', // Aegean Numbers
        // '\\u{10300}-\\u{1032F}', // Old Italic
        // '\\u{10330}-\\u{1034F}', // Gothic
        // '\\u{10380}-\\u{1039F}', // Ugaritic
        // '\\u{10400}-\\u{1044F}', // Deseret
        // '\\u{10450}-\\u{1047F}', // Shavian
        // '\\u{10480}-\\u{104AF}', // Osmanya
        // '\\u{10800}-\\u{1083F}', // Cypriot Syllabary
        // '\\u{1D000}-\\u{1D0FF}', // Byzantine Musical Symbols
        // '\\u{1D100}-\\u{1D1FF}', // Musical Symbols
        '\\u{1D300}-\\u{1D35F}', // Tai Xuan Jing Symbols
        // '\\u{1D400}-\\u{1D7FF}', // Mathematical Alphanumeric Symbols
        '\\u{20000}-\\u{2A6DF}', // CJK Unified Ideographs Extension B
        '\\u{2A700}-\\u{2B73F}', // CJK Unified Ideographs Extension C
        '\\u{2B740}-\\u{2B81F}', // CJK Unified Ideographs Extension D
        '\\u{2B820}-\\u{2CEAF}', // CJK Unified Ideographs Extension E
        '\\u{2CEB0}-\\u{2EBEF}', // CJK Unified Ideographs Extension F
        '\\u{2F800}-\\u{2FA1F}', // CJK Compatibility Ideographs Supplement
    ];

    // Ê±âÂ≠óÔºà‰∏çÂåÖÊã¨Êó•ÊñáÂπ≥ÂÅáÂêç„ÄÅÁâáÂÅáÂêç„ÄÅÁâáÂÅáÂêçÊ≥®Èü≥Êâ©Â±ï„ÄÅÈü©Êñá JamoÔºâ + Ê†áÁÇπÁ¨¶Âè∑
    const UNICODE_CJK_HAN = [
        '\\u3400-\\u4DBF', // CJK Unified Ideographs Extension A
        '\\u4E00-\\u9FFF', // CJK Unified Ideographs
        '\\uF900-\\uFAFF', // CJK Compatibility Ideograph
        '\\uD840-\\uD87A', // High Surrogates
        '\\uD880-\\uD884', // High Surrogates
        '\\uDC00-\\uDFFF', // Low Surrogates
    ];

    // Êó•ÊñáÂπ≥ÂÅáÂêç„ÄÅÁâáÂÅáÂêç„ÄÅÁâáÂÅáÂêçÊ≥®Èü≥Êâ©Â±ï
    const UNICODE_CJK_JP = [
        '\\u3040-\\u309F', // Hiragana
        '\\u30A0-\\u30FF', // Katakana
        '\\uDC00-\\uDC01',
        '\\u31F0-\\u31FF', // Katakana Phonetic Extensions
        '\\uFF66-\\uFF9F',
        '\\uD82C',
    ];

    // Èü©Êñá Jamo
    const UNICODE_CJK_KR = [
        '\\u1100-\\u11FF', // Hangul Jamo
        '\\u3130-\\u318F', // Hangul Compatibility Jamo
        '\\uA960-\\uA97C',
        '\\uAC00-\\uD7A3',
        '\\uD7B0-\\uD7FB',
        '\\uFFA1-\\uFFDC'
    ];

    // CJK Á¨¶Âè∑„ÄÅCJK Êâ©Â±ïÁ≠â
    const UNICODE_CJK_SYMBOLS_EXT = [
        '\\u2E80-\\u2EFF', // CJK Radicals Supplement
        '\\u2F00-\\u2FDF', // CJK Radicals Supplement
        '\\u2FF0-\\u2FFF', // CJK Radicals Supplement
        '\\u3100-\\u312F', // Bopomofo
        '\\u31A0-\\u31BF', // Bopomofo Extended
        '\\u31C0-\\u31EF', // 
        '\\u3300-\\u33FF', // CJK Compatibility
        '\\uFE30-\\uFE4F', // CJK Compatibility Forms
        '\\uFF00-\\uFFEF', // Halfwidth and Fullwidth Forms
        '\\u{1D300}-\\u{1D35F}', // Tai Xuan Jing Symbols
        '\\u{20000}-\\u{2A6DF}', // CJK Unified Ideographs Extension B
        '\\u{2A700}-\\u{2B73F}', // CJK Unified Ideographs Extension C
        '\\u{2B740}-\\u{2B81F}', // CJK Unified Ideographs Extension D
        '\\u{2B820}-\\u{2CEAF}', // CJK Unified Ideographs Extension E
        '\\u{2CEB0}-\\u{2EBEF}', // CJK Unified Ideographs Extension F
        '\\u{2F800}-\\u{2FA1F}', // CJK Compatibility Ideographs Supplement
        '\\u3007', // IDEOGRAPHIC NUMBER ZERO
    ];

    // CJK ÊâÄÊúâÂ≠óÁ¨¶
    // const CJK_RANGE_ALL = UNICODE_CJK_ALL.join(',').replaceAll('\\u','U+').replaceAll('-U+','-').replaceAll('{','').replaceAll('}','');

    // ‰∏≠Êó•Èü©Ê±âÂ≠óÔºàÂåÖÊã¨Êó•ÊñáÂπ≥ÂÅáÂêç„ÄÅÁâáÂÅáÂêç„ÄÅÁâáÂÅáÂêçÊ≥®Èü≥Êâ©Â±ï„ÄÅÈü©Êñá JamoÔºâ + Ê†áÁÇπÁ¨¶Âè∑
    // const CJK_RANGE_HAN = "U+3400-4DBF,U+4E00-9FFF,U+F900-FAFF,U+D840-D87A,U+D880-D884,U+DC00-DFFF,U+3040-309F,U+30A0-30FF,U+DC00-DC01,U+31F0-31FF,U+FF66-FF9F,U+D82C,U+1100-11FF,U+3130-318F,U+A960-A97C,U+AC00-D7A3,U+D7B0-D7FB,U+FFA1-FFDC";
    const CJK_RANGE_HAN = '' + 
        UNICODE_CJK_HAN.join(',').replaceAll('\\u','U+').replaceAll('-U+','-').replaceAll('{','').replaceAll('}','') + ',' + 
        UNICODE_CJK_JP.join(',').replaceAll('\\u','U+').replaceAll('-U+','-').replaceAll('{','').replaceAll('}','') + ',' + 
        UNICODE_CJK_KR.join(',').replaceAll('\\u','U+').replaceAll('-U+','-').replaceAll('{','').replaceAll('}','');

    const reWhiteSpace = new RegExp(/\s/);

    // Ê£ÄÊü•ÁΩëÈ°µÂÜÖÂÆπÊòØÂê¶ÂåÖÂê´ CJK Â≠óÁ¨¶
    // [JavaScript Ê≠£ÂàôË°®ËææÂºèÂåπÈÖçÊ±âÂ≠ó](https://zhuanlan.zhihu.com/p/33335629)
    // [Âú®Ê≠£ÂàôË°®ËææÂºè‰∏≠‰ΩøÁî® Unicode Â±ûÊÄßËΩ¨‰πâ](https://keqingrong.cn/blog/2020-01-29-regexp-unicode-property-escapes/)
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Unicode_Property_Escapes
    // https://www.regular-expressions.info/unicode.html
    function checkCJK() {
        const bodyText = document.body.innerText;
        const reCJK = new RegExp(`[${UNICODE_CJK_ALL.join('')}]`, 'u');

        // const hasCJK = bodyText.match(reCJK);
        // return Boolean(hasCJK);

        const matchCount = (bodyText.match(reCJK) || []).length;
        return matchCount > 0 ? true : false;
    }

    // Â¶ÇÊûú html.lang Ê≤°ÊúâËÆæÁΩÆÔºåÊ†πÊçÆÁΩëÈ°µÂÜÖÂÆπÂåÖÂê´ÁöÑ CJK Â≠óÁ¨¶Êï∞ÈáèÂà§Êñ≠ÊâÄÂ±ûÂú∞Âå∫Ôºà‰∏çÁ≤æÁ°ÆÔºåÁÆÄÁπÅ‰Ωì„ÄÅCJK Ê±âÂ≠óÁöÑÁ†ÅÁÇπÊúâÈáçÂè†Ôºâ
    function checkCJKLocale() {
        const bodyText = document.body.innerText;

        // Ê±âÂ≠óÔºà‰∏çÂåÖÊã¨Êó•ÊñáÂπ≥ÂÅáÂêç„ÄÅÁâáÂÅáÂêç„ÄÅÁâáÂÅáÂêçÊ≥®Èü≥Êâ©Â±ï„ÄÅÈü©Êñá JamoÔºâ
        // [transpiler ES2015 Unicode regular expressions](https://github.com/mathiasbynens/regexpu)
        // npm install regexpu -g
        // echo 'const reExpHAN = /[\p{Unified_Ideograph}]/u;' | regexpu
        const reExpHAN = /[\u3400-\u4DBF\u4E00-\u9FFF\uF900-\uFAFF]|[\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD884[\uDC00-\uDF4A]/;

        // [regular expression for matching CJK text](https://github.com/ikatyang/cjk-regex)
        // [‰∏≠ÊñáÁπÅÁÆÄ‰ΩìÂØπÁÖßË°®](https://zh.wikipedia.org/zh-cn/Wikipedia:%E4%B8%AD%E6%96%87%E7%B9%81%E7%AE%80%E4%BD%93%E5%AF%B9%E7%85%A7%E8%A1%A8)
        // [‰∫îÁ¨îÂ≠óÂûã Unicode CJK Ë∂ÖÂ§ßÂ≠óÁ¨¶ÈõÜÁºñÁ†ÅÊï∞ÊçÆÂ∫ì](https://github.com/CNMan/UnicodeCJK-WuBi)
        // [ÂäüËÉΩÂÖ®Èù¢ÁöÑÊ±âÂ≠óÂ∑•ÂÖ∑Â∫ì(ÊãºÈü≥ Á¨îÁîª ÂÅèÊóÅ ÊàêËØ≠ ËØ≠Èü≥ ÂèØËßÜÂåñÁ≠â)](https://github.com/theajack/cnchar)
        const reExpEmoji = /\p{Emoji_Modifier_Base}\p{Emoji_Modifier}?|\p{Emoji_Presentation}|\p{Emoji}\uFE0F/;
        const reEmoji = new RegExp(reExpEmoji, 'gu');

        // const reExpCJK = /[\p{Ideographic}\p{Unified_Ideograph}]/;
        // const reExpCJK = /[\p{Script=Han}\p{Script_Extensions=Han}]/;

        // const reCJK = new RegExp(reExpCJK, 'gu');
        // const reCJK = new RegExp(`[${UNICODE_CJK_ALL.slice(0, 23).join('')}]`, 'gu');
        const reCJK = new RegExp(`[${UNICODE_CJK_ALL.join('')}]`, 'gu');

        const reHAN = new RegExp(reExpHAN, 'gu');
        const reHAN_PUN = new RegExp(`[${UNICODE_CJK_HAN.join('')}]`, 'gu');
        const reHAN_SYMBOL = new RegExp(`[${UNICODE_CJK_HAN.join('')}${UNICODE_CJK_SYMBOLS_EXT.join('')}]`, 'gu');

        const reSYMBOL_EXT = new RegExp(`[${UNICODE_CJK_SYMBOLS_EXT.join('')}]`, 'gu');

        const reSC = new RegExp(`[${CHINESE_UNICODE_RANGE_SIMPLFIED}]`, 'gu');
        const reTC = new RegExp(`[${CHINESE_UNICODE_RANGE_TRADITIONAL}]`, 'gu');

        const reJP = new RegExp(`[${UNICODE_CJK_JP.join('')}]`, 'gu');
        const reKR = new RegExp(`[${UNICODE_CJK_KR.join('')}]`, 'gu');

        const matchEmoji = (bodyText.match(reEmoji) || []).length;
        const matchCJK = (bodyText.match(reCJK) || []).length;
        const matchHAN = (bodyText.match(reHAN) || []).length;
        const matchHAN_PUN = (bodyText.match(reHAN_PUN) || []).length;
        const matchHAN_SYMBOL = (bodyText.match(reHAN_SYMBOL) || []).length;
        const match_SYMBOL_EXT = (bodyText.match(reSYMBOL_EXT) || []).length;
        const matchSC = (bodyText.match(reSC) || []).length;
        const matchTC = (bodyText.match(reTC) || []).length;
        const matchJP = (bodyText.match(reJP) || []).length;
        const matchKR = (bodyText.match(reKR) || []).length;

        const matchAll = `Emoji: ${matchEmoji} CJK: ${matchCJK} Han: ${matchHAN} Han+Punctuation: ${matchHAN_PUN} Han+Symbol: ${matchHAN_SYMBOL} Symbol+CJK Extension: ${match_SYMBOL_EXT} SC: ${matchSC} TC: ${matchTC} JP: ${matchJP} KR: ${matchKR}`;
        console.log(matchAll);

        let matchLang = 'zh-CN';
        if (matchTC > 0 && matchTC > matchSC) matchLang = 'zh-TW';
        if (matchJP > 0 && matchTC > matchSC) matchLang = 'ja';
        if (matchKR > 0 && matchTC > matchSC) matchLang = 'kr';

        return matchLang;
    }

    // 16 ËøõÂà∂ËΩ¨ 10 ËøõÂà∂
    const hexToDecimal = hex => parseInt(hex, 16);

    // ÊâìÂç∞ UNICODE ËåÉÂõ¥Êï∞ÁªÑÂÜÖÁöÑÊâÄÊúâÂ≠óÁ¨¶ÔºåÂ¶ÇÔºö
    // printUnicodeRangeCharacters(['\\u3300-\\u33FF','\\uFE30-\\uFE4F']);
    function printUnicodeRangeCharacters(unicodeRange) {
        unicodeRange.forEach(function(range) {
            range = range.replaceAll('\\u','').replaceAll('{','').replaceAll('}','');
            let outputStr = `${range}:`;
    
            if (range.includes('-')) {
                for(let i = hexToDecimal(range.split('-')[0]); i <= hexToDecimal(range.split('-').pop()); i++) {
                    outputStr = outputStr + ' ' + String.fromCodePoint(i);
                }
            } else {
                outputStr = outputStr + ' ' + String.fromCodePoint(hexToDecimal(range));
            }
    
            console.log(outputStr);
        })
    }

    // Ê†πÊçÆ html.lang ËÆæÁΩÆÈªòËÆ§Â≠ó‰Ωì
    // [CSS unicode-range ÁâπÂÆöÂ≠óÁ¨¶‰ΩøÁî® font-face Ëá™ÂÆö‰πâÂ≠ó‰Ωì](https://www.zhangxinxu.com/wordpress/2016/11/css-unicode-range-character-font-face/)
    // [ÂâçÁ´ØÂ¶Ç‰ΩïÂÆûÁé∞‰∏≠Êñá„ÄÅËã±Êñá„ÄÅÊï∞Â≠ó‰ΩøÁî®‰∏çÂêåÂ≠ó‰Ωì](https://keqingrong.cn/blog/2019-11-30-different-fonts-in-different-locales/)
    // [ÊòæÁ§∫ÁâπÂÆö charcode ËåÉÂõ¥ÂÜÖÁöÑÂ≠óÁ¨¶ÂÜÖÂÆπÂÆû‰æãÈ°µÈù¢](https://www.zhangxinxu.com/study/201611/show-character-by-charcode.php?range=4E00-9FA5)
    // [Fix CJK fonts/punctuations for Chrome and Firefox](https://github.com/stecue/fixcjk)
    // [emoji-unicode-range demo](https://bl.ocks.org/nolanlawson/61e10fab056e75b02b5c6a0a223a5ad7)
    // [mozilla twemoji-color emoji demo](https://bl.ocks.org/nolanlawson/6b6b026804aafa1e583ae7a9d7c7c32f)
    // [what can my font do?](https://wakamaifondue.com/beta/)
    function htmlFontStyle() {
        let html, lang, body, fontfamily;

        html = document.getElementsByTagName('html')[0];
        lang = html.getAttribute('lang');

        if (!lang) {
            if (checkCJK()) {
                lang = 'zh-CN';
            } else {
                lang = 'en';
            }
        }

        body = document.getElementsByTagName('body')[0];
        fontfamily = getComputedStyle(body).getPropertyValue('font-family');
        fontfamily = fontfamily.replaceAll('"','').replaceAll("'",'').replaceAll(', ',',');

        let bodyFirstFont = '';
        if (fontfamily) {
            // Â¶ÇÊûú body ËÆæÁΩÆÁöÑÁ¨¨‰∏Ä‰∏™Â≠ó‰Ωì‰∏çÂú®ÊõøÊç¢Â≠ó‰ΩìÂàóË°®ÈáåÈù¢ÔºåË°®Á§∫ÁΩëÈ°µ‰ΩøÁî®‰∫Ü‰∏ìÁî®Â≠ó‰ΩìÔºåÂàôÊääËØ•Â≠ó‰ΩìÊîæÂú®ÈªòËÆ§Â≠ó‰ΩìÁöÑÈ¶ñ‰Ωç
            let bodyFonts = fontfamily.split(",");
            if (!FONTS_REPLACE.includes(bodyFonts[0].trim())) {
                bodyFirstFont = bodyFonts[0].trim();
            }
        }

        switch (lang.toLowerCase()) {
            case 'cn':
            case 'zh-cn':
            case 'zh_cn':
            case 'zh-hans':
            case 'zh-hans-cn':
            case 'zh-hans-hk':
            case 'zh-hans-mo':
            case 'zh-hans-tw':
            case 'zh-sg':
            case 'zh_sg':
            case 'zh-hans-sg':
            case 'zh-my':
            case 'zh_my':
            case 'zh-hans-my':
                FONT_LOCALE = 'SC';
                FONT_CJK = FONT_CJK_SC;
                FONT_MONO_CJK = FONT_MONO_CJK_SC;
                break;
            case 'tw':
            case 'zh-tw':
            case 'zh_tw':
            case 'zh-hant':
            case 'zh-hant-cn':
            case 'zh-hant-tw':
            case 'zh-hant-sg':
            case 'zh-hant-my':
                FONT_LOCALE = 'TC';
                FONT_CJK = FONT_CJK_TC;
                FONT_MONO_CJK = FONT_MONO_CJK_TC;
                break;
            case 'hk':
            case 'zh-hk':
            case 'zh_hk':
            case 'zh-hant-hk':
            case 'zh-mo':
            case 'zh_mo':
            case 'zh-hant-mo':
                FONT_LOCALE = 'HK';
                FONT_CJK = FONT_CJK_HK;
                FONT_MONO_CJK = FONT_MONO_CJK_HK;
                break;
            case 'ja':
                FONT_LOCALE = 'JP';
                FONT_CJK = FONT_CJK_JP;
                FONT_MONO_CJK = FONT_MONO_CJK_JP;
                break;
            case 'ko':
                FONT_LOCALE = 'KR';
                FONT_CJK = FONT_CJK_KR;
                FONT_MONO_CJK = FONT_MONO_CJK_KR;
                break;
            default:
                FONT_LOCALE = 'SC';
                FONT_CJK = FONT_CJK_SC;
                FONT_MONO_CJK = FONT_MONO_CJK_SC;
        }

        let htmlFontFamily, monoFontFamily;

        htmlFontFamily = reWhiteSpace.test(FONT_DEFAULT) ? "'" + FONT_DEFAULT + "'" : FONT_DEFAULT;
        htmlFontFamily += ", " + (reWhiteSpace.test(FONT_CJK) ? "'" + FONT_CJK + "'" : FONT_CJK);
        htmlFontFamily += ", " + (reWhiteSpace.test(FONT_EMOJI) ? "'" + FONT_EMOJI + "'" : FONT_EMOJI);
        htmlFontFamily += ", " + (reWhiteSpace.test(FONT_FALLBACK) ? "'" + FONT_FALLBACK + "'" : FONT_FALLBACK);
        if (bodyFirstFont) {
            if (reWhiteSpace.test(bodyFirstFont)) {
                htmlFontFamily = bodyFirstFont + ", " + htmlFontFamily;
            } else {
                htmlFontFamily = "'" + bodyFirstFont + "', " + htmlFontFamily;
            }
        }

        monoFontFamily = reWhiteSpace.test(FONT_MONO) ? "'" + FONT_MONO + "'" : FONT_MONO;
        monoFontFamily += ", " + (reWhiteSpace.test(FONT_MONO_CJK) ? "'" + FONT_MONO_CJK + "'" : FONT_MONO_CJK);
        monoFontFamily += ", " + (reWhiteSpace.test(FONT_EMOJI) ? "'" + FONT_EMOJI + "'" : FONT_EMOJI);
        monoFontFamily += ", " + (reWhiteSpace.test(FONT_FALLBACK) ? "'" + FONT_FALLBACK + "'" : FONT_FALLBACK);


        //ËÆæÁΩÆ html ÈªòËÆ§Â≠ó‰Ωì
        html.style.setProperty("font-family", htmlFontFamily);

        // ËÆæÁΩÆ body ÈªòËÆ§Â≠ó‰Ωì‰∏∫ inherit
        // body.style.setProperty("font-family", "inherit");
        // body.setAttribute('style','font-weight:400 !important');

        // Â≠ó‰Ωì CSS ÈÖçÁΩÆ
        let cssBody, cssFontFaceDefault, cssFontFaceCJK, cssFontFaceMono;

        // cssBody = `body { -webkit-font-smoothing: subpixel-antialiased !important; -moz-osx-font-smoothing: grayscale !important; text-rendering: optimizeLegibility !important; font-family: inherit; }`;
        // cssFontFaceDefault = `@font-face { font-family: '${FONT_CJK}'; src: local('${FONT_DEFAULT}'); }`;
        // cssFontFaceCJK = `@font-face { font-family: '${FONT_CJK}'; src: local('${FONT_CJK}'); unicode-range: ${CJK_RANGE_HAN}; }`;
        // cssFontFaceMono = `pre,code,kbd,samp { font-family: ${monoFontFamily} !important; }`;
        // GM_addStyle(cssBody);
        // GM_addStyle(cssFontFaceDefault);
        // GM_addStyle(cssFontFaceCJK);
        // GM_addStyle(cssFontFaceMono);

        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-east-asian
        // body { font-variant-east-asian: simplified; }
        // body { font-variant-east-asian: traditional; }
        cssBody = `
            body {
                -webkit-font-smoothing: subpixel-antialiased !important;
                -moz-osx-font-smoothing: grayscale !important;
                text-rendering: optimizeLegibility !important;
                font-family: inherit;
            }`;

        cssFontFaceDefault = `
            @font-face {
                font-family: '${FONT_CJK}';
                src: local('${FONT_DEFAULT}');
            }`;

        cssFontFaceCJK = `
            @font-face {
                font-family: '${FONT_CJK}';
                src: local('${FONT_CJK}');
                unicode-range: ${CJK_RANGE_HAN};
            }`;

        cssFontFaceMono = `
            pre,code,kbd,samp {
                font-family: ${monoFontFamily} !important;
            }`;

        let cssStyle = `${cssBody}\n${cssFontFaceDefault}\n${cssFontFaceCJK}\n${cssFontFaceMono}`;
        cssStyle = cssStyle.replaceAll('            ','');

        //with jquery
        // $('pre,code,kbd,samp').css('cssText', `font-family: ${monoFontFamily} !important;`);
        // switch (siteHost) {
        //     case 'github.com':
        //         $('.h1, .h2, .h3, .h4, .h5, .h6, p, a').css('cssText', 'font-weight:400 !important');
        //         $('.text-bold').css('cssText', 'font-weight:400 !important');
        //         break;
        //     case 'member.bilibili.com':
        //         $('#app *').css('cssText', 'font-weight:400 !important');
        //         break;
        //     default:
        // }

        return cssStyle;
    }

    // Âú®Ê±âÂ≠ó‰∏éÊãâ‰∏ÅÂ≠óÊØçÈó¥Ê∑ªÂä†Á©∫Ê†º
    // https://github.com/mastermay/text-autospace.js/blob/master/text-autospace.js
    function LatinCJKSpaceStyle() {
        let html = document.getElementsByTagName('html')[0];
        html.classList.add('han-la');

        let cssStyle = `
            html.han-la hanla:after {
                content: " ";
                display: inline;
                font-family: '${FONT_DEFAULT}';
                font-size: 0.89em;
            }

            html.han-la code hanla,
            html.han-la pre hanla,
            html.han-la kbd hanla,
            html.han-la samp hanla {
                display: none;
            }

            html.han-la ol > hanla,
            html.han-la ul > hanla {
                display: none;
            }
            `;

        cssStyle = cssStyle.replaceAll('            ','');

        return cssStyle;
    }

    // [findAndReplaceDOMText](https://github.com/padolsey/findAndReplaceDOMText)
    function addSpaceBetweenLatinCJK() {
        $('body').each(function() {
            // let hanzi = `[${UNICODE_CJK_ALL.join('')}]`,
            // let hanzi = '[\u2E80-\u2FFF\u31C0-\u31EF\u3300-\u4DBF\u4E00-\u9FFF\uF900-\uFAFF\uFE30-\uFE4F]',
            let hanzi = '[\u3400-\u4DBF\u4E00-\u9FFF\uF900-\uFAFF]|[\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD884[\uDC00-\uDF4A]',
                punc = {
                    base: "[@&=_\\$%\\^\\*-\\+/]",
                    open: "[\\(\\[\\{<‚Äò‚Äú]",
                    close: "[,\\.\\?!:\\)\\]\\}>‚Äô‚Äù]"
                },
                latin = '[A-Za-z0-9\u00C0-\u00FF\u0100-\u017F\u0180-\u024F\u1E00-\u1EFF]' + '|' + punc.base,
                patterns = [
                    '(' + hanzi + ')(' + latin + '|' + punc.open + ')',
                    '(' + latin + '|' + punc.close + ')(' + hanzi + ')'
                ];
                // patterns = [
                //     '/(' + hanzi + ')(' + latin + '|' + punc.open + ')/ig',
                //     '/(' + latin + '|' + punc.close + ')(' + hanzi + ')/ig'
                // ];

            patterns.forEach(function(exp) {
                const reFind = new RegExp(exp,'gui');
                findAndReplaceDOMText(this, {
                    // find: eval(exp),
                    find: reFind,
                    replace: '$1<hanla>$2',
                    filterElements: function(el) {
                        var name = el.nodeName.toLowerCase(),
                            classes = (el.nodeType == 1) ? el.getAttribute('class') : '',
                            charized = (classes && classes.match(/han-js-charized/) != null) ? true : false;
        
                        return name !== 'style' && name !== 'script' && !charized;
                    }
                })
            }, this);

            findAndReplaceDOMText(this, {
                find: '<hanla>',
                replace: function() {
                    return document.createElement('hanla')
                }
            });

            this.normalize();

            $('* > hanla:first-child').parent().each(function() {
                if (this.firstChild.nodeType == 1) {
                    $(this).before($('<hanla/>'));
                    $(this).find('hanla:first-child').remove();
                }
            });
        })
    }

    // ÁßªÈô§Â§ñÈìæÈáçÂÆöÂêë
    function fixLinkRedirect() {
        document.querySelectorAll('a').forEach( node => {
            if (node.href.indexOf("=http") > 0) {
                node.href = decodeURIComponent(node.href.slice(node.href.indexOf("=http") + 1));
            }

            if (node.href.indexOf("target") > 0) {
                node.href = decodeURIComponent(node.href.slice(node.href.indexOf("target") + 7));
            }
        });
    }

    // ‰∏ªÁ®ãÂ∫è
    // ËÆæÁΩÆ CSS ËßÑÂàô
    let cssFontStyle, cssSpaceStyle, cssInnerHTML

    cssFontStyle = htmlFontStyle();
    cssSpaceStyle = LatinCJKSpaceStyle();

    if (cssFontStyle && cssSpaceStyle) {
        cssInnerHTML = `${cssFontStyle}\n${cssSpaceStyle}`;
    } else {
        if (cssFontStyle) cssInnerHTML = `${cssFontStyle}`;
        if (cssSpaceStyle) cssInnerHTML = `${cssSpaceStyle}`;
    }
    GM_addStyleInnerHTML(cssInnerHTML);

    //Âú®Ê±âÂ≠ó‰∏éÊãâ‰∏ÅÂ≠óÊØçÈó¥Ê∑ªÂä†Á©∫Ê†º
    addSpaceBetweenLatinCJK();

    // ÁßªÈô§Â§ñÈìæÈáçÂÆöÂêë
    // fixLinkRedirect();
})();
